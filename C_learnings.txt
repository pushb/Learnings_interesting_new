
/*********************************/
/****** Extern ******************/
/*********************************/

When you are writing a extern function in 'C'. You dont need to mention the arguments that it take.

pushb@pushb-VirtualBox:~/working_dir/practise/CPP$ cat ext1.c
int file1_var1 = 10;

int sum(int i, int j){
        return i + j;
}
pushb@pushb-VirtualBox:~/working_dir/practise/CPP$ cat ext1_main.c
#include <stdio.h>
#include <stdlib.h>
extern int sum();    //You dont need to mention the arguments.
int main(){

        printf("sum %d", sum(2,3));
        return 0;
}

pushb@pushb-VirtualBox:~/working_dir/practise/CPP$ gcc -o ext1 ext1.c ext1_main.c
pushb@pushb-VirtualBox:~/working_dir/practise/CPP$ ./ext1
sum 5


Where as in C++, it is different. Becuase we have function overloading.
pushb@pushb-VirtualBox:~/working_dir/practise/CPP$ gcc -o ext1 ext1.cpp ext1_main.cpp
ext1_main.cpp: In function ‘int main()’:
ext1_main.cpp:6:35: error: too many arguments to function ‘int sum()’
         printf("sum %d", sum(2,'a'));
                                   ^
ext1_main.cpp:3:12: note: declared here
 extern int sum();
            ^~~



